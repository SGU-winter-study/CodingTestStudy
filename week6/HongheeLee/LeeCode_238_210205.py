'''
    문제설명
        리트코드 238 자신을 제외한 배열의 곱
        배열을 입력받고 output[i]가 자신을 제외한 나머지 모든 요소의 곱이 되도록 출력
    해결전략
        문제를 처음 봤을 때는 전체 곱을 구한 뒤 각 항목별로 자기 자신을 나눠서 하는 풀이가 쉽게 떠오른다.
        하지만 문제에서는 나눗셈을 활용하는 풀이를 제외하고 있다. 
        그래서 자기자신을 제외하고 왼쪽의 곱셈 결과와 오른쪽의 곱셈 결과를 곱하는 방식으로 풀이할 수 있다.
        먼저 자신을 제외한 왼쪽의 곱셈 결과를 구해서 out 리스트에 할당한다. 
        가장 왼쪽에 있는 값도 오른쪽의 곱셈 결과와 곱해주기 위해서는 0이 아닌 1을 할당해야 한다. append와 p값 갱신의 순서를 유의해야 한다.
        그 다음 왼쪽 곱셈 결과에 오른쪽 곱셈 결과를 곱하는데 이는 리스트의 끝(가장 오른쪽 값)에서부터 시작한다. 
        마찬가지로 가장 오른쪽에 있는 값도 1을 곱해준다. 
        차례로 nums 리스트의 값들을 p에 곱해 p를 갱신해서 오른쪽 곱셈 결과를 갱신하고 이를 out에 곱해준다.
        이 과정을 마치면 out 리스트에 자신을 제외한 나머지 요소의 곱셈 결과가 들어있게 된다.
'''
class Solution(object):
    def productExceptSelf(self, nums):
        out = []
        p = 1
        # 왼쪽 곱셈
        for i in range(len(nums)):
            out.append(p)
            p = p * nums[i]
        # 왼쪽 곱셈 결과에 오른쪽 곱셈 결과 곱하기
        p = 1
        for i in range(len(nums)-1, -1, -1):
            out[i] = out[i] * p
            p = p * nums[i]
        
        return out
